name: Terraform deploy
on:
  push:
    branches:
      - "*"

jobs:
  run-checks:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: oltp_test

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

        ports:
          - 5432:5432


    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup- Python
        uses: actions/checkout@v4
        with: 
          python-version: '3.11'
      
      - name: Install requirements
        run: make requirements

      - name: Make dev-setup
        run: make dev-setup

      - name: Make security-test
        run: make security-test
  
      - name: Make run-flake
        run: make run-flake

      # - name: Make envfile
      #   uses: SpicyPizza/create-envfile@v2.0
      #   with:
      #     envkey_TEST_USER: postgres
      #     envkey_TEST_PASSWORD: postgres
      #     envkey_TEST_HOST: localhost
      #     envkey_TEST_DATABASE: oltp_test

      # - name: Replicate .env for Workflow
      #   run: |
      #     echo "TEST_USER=postgres" >> .env
      #     echo "TEST_PASSWORD=postgres" >> .env
      #     echo "TEST_"
    

      - name: Create Test Database
        #run: psql -h ${{env.TEST_HOST}} -U ${{env.USER}} -d ${{env.TEST_DATABASE}} -f tests/data/test-extraction.sql
        run: psql -h localhost -U postgres -d oltp_test -f tests/data/test-extraction.sql
        # run: |
        #   source $GITHUB_WORKSPACE/.env  # Source the copied .env file to set environment variables
        #   psql -h $TEST_HOST -U $USER -d $TEST_DATABASE -f tests/data/test-extraction.sql
        # env:
        #   PGPASSWORD: postgres
        #   PGHOST: localhost
        #   PGUSER: postgres
        #   PGDATABASE: oltp_test
              
      - name: Make unit-test
        run: make unit-test
        # env:
        #   PGPASSWORD: postgres
      
      - name: Make check-coverage
        run: make check-coverage

      - name: Make layer setup
        run: make layer-setup

      - name: Make run-checks
        run: make run-checks

  
  deploy:
    runs-on: ubuntu-latest
    needs: run-checks
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform init
        working-directory: terraform
        run: terraform init

      - name: Terraform plan
        working-directory: terraform
        run: terraform plan

      - name: Terraform apply
        working-directory: terraform
        run: terraform apply -auto-approve
